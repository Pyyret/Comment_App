# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Application for Production

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '2.10.5'
          channel: 'stable'
          cache: true

        # get dependencies
      - run: flutter pub get
        # copy env file and apply repo env variable
      - run: sed -e "s/192.168.0.XXX/$SERVER/g" lib/environment.dart.example > lib/environment.dart
        env:
          SERVER: ${{ secrets.SERVER_IP_ANDROID }}
      # build app
      - run: flutter build apk --split-per-abi --release
      - run: echo 'The app will use server IP found in SERVER_IP_ANDROID in repository secrets'

      - uses: actions/upload-artifact@v3
        with:
          name: Android APK armeabi-v7a
          path: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
      - uses: actions/upload-artifact@v3
        with:
          name: Android APK arm64-v8a
          path: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
      - uses: actions/upload-artifact@v3
        with:
          name: Android APK x86_64
          path: build/app/outputs/flutter-apk/app-x86_64-release.apk

      # build android appbundle
      - run: flutter build appbundle --release

      - uses: actions/upload-artifact@v3
        with:
          name: Android App bundle
          path: build/app/outputs/bundle/release/app-release.aab

  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '2.10.5'
          channel: 'stable'
          architecture: x64
          cache: true

        # get dependencies
      - run: flutter pub get
        # copy env file
      - run: sed -e "s/192.168.0.XXX/$SERVER/g" lib/environment.dart.example > lib/environment.dart
        env:
          SERVER: ${{ secrets.SERVER_IP_IOS }}
      # build app
      - run: flutter build ios --release --no-codesign --obfuscate --split-debug-info="cmt_projekt/"
      - run: echo 'The app will use server IP found in SERVER_IP_IOS in repository secrets'
      #- run: xcodebuild -project ios/Runner.xcodeproj -scheme Runner build
      - run: cp -R build/ios/iphoneos/Runner.app Payload/Runner.app
      - run: zip Payload
      - run: mv Payload.zip Payload.ipa
      - uses: actions/upload-artifact@v3
        with:
          name: IOS APP files
          path: build/ios/iphoneos/Runner.app
      - uses: actions/upload-artifact@v3
        with:
          name: IOS IPA file
          path: Payload.ipa

      # removed since it requires code signing
      # build ipa bundle
      #- run: flutter build ipa --obfuscate --split-debug-info --no-codesign
      #- uses: actions/upload-artifact@v3
      #  with:
      #    name: IOS IPA bundle
      #    path: build/ios/ipa

  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '2.10.5'
          channel: 'stable'
          cache: true

        # get dependencies
      - run: flutter pub get
        # copy env file
      - run: sed -e "s/192.168.0.XXX/$SERVER/g" lib/environment.dart.example > lib/environment.dart
        env:
          SERVER: ${{ secrets.SERVER_IP_IOS }}
      # build app
      - run: flutter build web
      - run: echo 'The app will use server IP found in SERVER_IP_IOS in repository secrets'
      - uses: actions/upload-artifact@v3
        with:
          name: Web files
          path: build/web

  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '2.10.5'
          channel: 'stable'
          cache: true

        # get dependencies
      - run: flutter pub get
        # copy env file
      - run: cp lib/environment.dart.example lib/environment.dart
      # build app
      - run: flutter pub global activate dartdoc
      - run: flutter pub global run dartdoc
      - uses: actions/upload-artifact@v3
        with:
          name: Documentation
          path: doc

  build-database-server:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '2.10.5'
          channel: 'stable'
          cache: true

        # get dependencies
      - run: flutter pub get
        # copy env file
      - shell: bash
        run: sed -e "s/192.168.0.XXX/$SERVER/g" lib/environment.dart.example > lib/environment.dart
        env:
          SERVER: ${{ secrets.SERVER_IP_DART }}
      # build app
      - run: dart compile exe server/database_server.dart
      - run: echo 'The executable will use server IP found in SERVER_IP_DART in repository secrets'
      - uses: actions/upload-artifact@v3
        with:
          name: Database server ${{ matrix.os }} executable
          path: server/database_server.exe
  build-stream-server:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '2.10.5'
          channel: 'stable'
          cache: true

        # get dependencies
      - run: flutter pub get
        # copy env file
      - shell: bash
        run: sed -e "s/192.168.0.XXX/$SERVER/g" lib/environment.dart.example > lib/environment.dart
        env:
          SERVER: ${{ secrets.SERVER_IP_DART }}
      # build app
      - run: dart compile exe server/stream_server.dart
      - run: echo 'The executable will use server IP found in SERVER_IP_DART in repository secrets'
      - uses: actions/upload-artifact@v3
        with:
          name: Stream server ${{ matrix.os }} executable
          path: server/stream_server.exe


